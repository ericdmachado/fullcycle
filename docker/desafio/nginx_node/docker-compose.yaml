services:
  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: .
      dockerfile: DockerfileNginx
    ports:
      - "8080:80"
    depends_on:
      - app
    entrypoint: dockerize -wait tcp://app:3000 -timeout 60s /docker-entrypoint.sh
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - node-network
  app:
    container_name: app
    hostname: app
    build:
      context: .
      dockerfile: DockerfileNode
    entrypoint: dockerize -wait tcp://db:3306 -timeout 60s docker-entrypoint.sh
    command: ["npm", "run", "start"]
    volumes:
      - ./node/server.js:/app/server.js
    depends_on:
      - db
    networks:
      - node-network
  db:
    container_name: db
    command: --innodb-use-native-aio=0
    hostname: db
    image: mysql:5.7
    restart: always
    tty: true
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql:/var/lib/mysql
    networks:
      - node-network
networks:
  node-network:
    driver: bridge
